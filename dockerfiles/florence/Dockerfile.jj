FROM node:8 as build-node
WORKDIR /src
COPY src /src
RUN npm install --unsafe-perm
RUN cd legacy ; npm install --unsafe-perm

FROM golang:1.15 as build-go
WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download -json
COPY --from=build-node dist dist
COPY . .
RUN find / -type d
RUN BUILD_TIME=`date +%s` && \
GIT_COMMIT=`git rev-parse HEAD` && \
VERSION=`git tag --points-at HEAD | grep ^v | head -n 1` && \
LDFLAGS="-X main.BuildTime=$BUILD_TIME -X main.GitCommit=$GIT_COMMIT -X main.Version=$VERSION" && \
echo $LDFLAGS && \
sleep 2 && \
cd assets; go run github.com/jteeuwen/go-bindata/go-bindata -o data.go -pkg assets ../dist/... ; cd .. && \
CGO_ENABLED=0 GOOS=linux go build -tags 'production' -ldflags "$LDFLAGS" -a -v -installsuffix cgo -o app .

FROM alpine:latest
RUN apk --no-cache add ca-certificates
COPY --from=build-go app/app .
#COPY --from=
ENV HUMAN_LOG 1
#ENV DEBUG 1

CMD ["./app"]