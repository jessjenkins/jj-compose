version: '3.8'
services:
  elasticsearch:
    image: elasticsearch:2.4.2
    ports:
      - "9300:9300"
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
  cmdelasticsearch:
    image: elasticsearch:5
    ports:
      # Set alternative ports to prevent port clash.
      - 10300:9300
      - 10200:9200
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  highcharts:
    image: onsdigital/highcharts-export-node
    ports:
      - "9999:8080"
  postgres:
    build: ./postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
    ports:
      - "5432:5432"
  mongodb:
    image: mongo
    ports:
      - 27017:27017
#  neo4j:
#    image: neo4j:3.2.12
#    ports:
#      - 7474:7474
#      - 7687:7687
#    environment:
#      - "NEO4J_AUTH=none"
#      - "NEO4J_dbms_memory_pagecache_size=5G"
#      - "NEO4J_dbms_memory_heap_max__size=5G"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.11-1.0.2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mathjax:
    image: onsdigital/mathjax-api
    ports:
      - "8888:8080"
  vault:
    image: vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "mooquackplop"
    ports:
      - 8200:8200
    cap_add:
      - IPC_LOCK
  redis:
    image: redis:6
    command: redis-server --requirepass default

  dp-sessions-api:
    image: dp-sessions-api
    build:
      context: repos/dp-sessions-api
      dockerfile: Dockerfile.jj
    environment:
      ZEBEDEE_URL: "http://zebedee:8082"
      SERVICE_AUTH_TOKEN: "88da21b9580a01c29fccd98c22b12612d696f0ca39409c92c0d7da6dacf8be1d"
      ELASTICACHE_ADDR: "redis:6379"
      ELASTICACHE_PASSWORD: "default"
    ports:
      - 24400:24400
    depends_on:
      - redis
      - zebedee

  zebedee:
    image: zebedee
    build:
      context: repos/zebedee
      dockerfile: Dockerfile.jj
    environment:
     zebedee_root: "/zebedee-content"
     audit_db_enabled: "false"
     PORT: 8082
    ports:
      - 8082:8082
    volumes:
      - type: bind
        source: ./zebedee-content
        target: /zebedee-content


  dp-frontend-router:
    image: dp-frontend-router
    build:
      context: repos/dp-frontend-router
      dockerfile: Dockerfile.jj
    environment:
      BABBAGE_URL: "http://babbage:8080"
      API_ROUTER_URL: "http://dp-api-router:23200"
    ports:
      - 20000:20000
    depends_on:
      - dp-api-router

  dp-api-router:
    image: dp-api-router
    build:
      context: repos/dp-api-router
      dockerfile: Dockerfile.jj
    environment:
      ZEBEDEE_URL: "http://zebedee:8082"
    ports:
      - 23200:23200
    depends_on:
      - zebedee

  sixteens:
    image: sixteens
    build:
      context: repos/sixteens
      dockerfile: Dockerfile.jj
    ports:
      - 9000:9000

  florence:
    image: florence
    build:
      context: repos/florence
      dockerfile: Dockerfile.jj
    ports:
      - 8081:8081
    environment:
      BIND_ADDR: ":8081"
      ENCRYPTION_DISABLED: "true"
      API_ROUTER_URL: "http://dp-api-router:23200"
    depends_on:
      - dp-api-router

  dp-frontend-renderer:
    image: dp-frontend-renderer
    build:
      context: repos/dp-frontend-renderer
      dockerfile: Dockerfile.jj
#    environment:
#      BABBAGE_URL: "http://babbage:8080"
#      API_ROUTER_URL: "http://dp-api-router:23200"
    ports:
      - 20010:20010
#    depends_on:
#      - dp-api-router

  babbage:
    image: babbage
    build:
      context: repos/babbage
      dockerfile: Dockerfile.jj
    environment:
      CONTENT_SERVICE_URL: "http://dp-api-router:23200/v1"
#      zebedee_root: "/zebedee-content"
#      audit_db_enabled: "false"
#      PORT: 8082
#    ports:
#      - 8082:8082
    depends_on:
      - dp-api-router